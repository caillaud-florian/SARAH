#include "Kernel/Handler.hpp"

typedef Sarah::Kernel::WindowConfig     WindowConfig;
typedef Sarah::Kernel::GeneralConfig    GeneralConfig;
typedef Sarah::Kernel::Handler          Handler;

int main()
{
    ///////////////////////////////////////////
    // WINDOW CONFIG
    ///////////////////////////////////////////
    WindowConfig * wConf = new WindowConfig();
    wConf->title = "test Config";
    wConf->videoMode = sf::VideoMode(600, 300);
    wConf->contextSettings.depthBits = 32;
    wConf->Print();

    ///////////////////////////////////////////
    // GENERAL CONFIG
    ///////////////////////////////////////////
    GeneralConfig gConf;
    gConf.AddConfig(wConf);

    ///////////////////////////////////////////
    // HANDLER INIT
    ///////////////////////////////////////////
    Handler vHandler(gConf);
    vHandler.Init();

    ///////////////////////////////////////////
    // HANDLER MESH LOADING
    ///////////////////////////////////////////
    GLfloat cube[] =
    {
        // positions    // colors (r, g, b, a)
        -50, -50, -50,  0, 0, 1, 1,
        -50,  50, -50,  0, 0, 1, 1,
        -50, -50,  50,  0, 0, 1, 1,
        -50, -50,  50,  0, 0, 1, 1,
        -50,  50, -50,  0, 0, 1, 1,
        -50,  50,  50,  0, 0, 1, 1,

         50, -50, -50,  0, 1, 0, 1,
         50,  50, -50,  0, 1, 0, 1,
         50, -50,  50,  0, 1, 0, 1,
         50, -50,  50,  0, 1, 0, 1,
         50,  50, -50,  0, 1, 0, 1,
         50,  50,  50,  0, 1, 0, 1,

        -50, -50, -50,  1, 0, 0, 1,
         50, -50, -50,  1, 0, 0, 1,
        -50, -50,  50,  1, 0, 0, 1,
        -50, -50,  50,  1, 0, 0, 1,
         50, -50, -50,  1, 0, 0, 1,
         50, -50,  50,  1, 0, 0, 1,

        -50,  50, -50,  0, 1, 1, 1,
         50,  50, -50,  0, 1, 1, 1,
        -50,  50,  50,  0, 1, 1, 1,
        -50,  50,  50,  0, 1, 1, 1,
         50,  50, -50,  0, 1, 1, 1,
         50,  50,  50,  0, 1, 1, 1,

        -50, -50, -50,  1, 0, 1, 1,
         50, -50, -50,  1, 0, 1, 1,
        -50,  50, -50,  1, 0, 1, 1,
        -50,  50, -50,  1, 0, 1, 1,
         50, -50, -50,  1, 0, 1, 1,
         50,  50, -50,  1, 0, 1, 1,

        -50, -50,  50,  1, 1, 0, 1,
         50, -50,  50,  1, 1, 0, 1,
        -50,  50,  50,  1, 1, 0, 1,
        -50,  50,  50,  1, 1, 0, 1,
         50, -50,  50,  1, 1, 0, 1,
         50,  50,  50,  1, 1, 0, 1,
    };

    vHandler.Load(cube);

    ///////////////////////////////////////////
    // APPLICATION MAIN LOOP
    ///////////////////////////////////////////
    vHandler.MainLoop();

    return EXIT_SUCCESS;
}